


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mParticle.Sdk.Api;
using mParticle.Sdk.Model;
using mParticle.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mParticle.Sdk.Test
{
    /// <summary>
    ///  Class for testing CrashReportEventDataAllOf
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CrashReportEventDataAllOfTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CrashReportEventDataAllOf
        //private CrashReportEventDataAllOf instance;

        public CrashReportEventDataAllOfTests()
        {
            // TODO uncomment below to create an instance of CrashReportEventDataAllOf
            //instance = new CrashReportEventDataAllOf();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CrashReportEventDataAllOf
        /// </summary>
        [Fact]
        public void CrashReportEventDataAllOfInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CrashReportEventDataAllOf
            //Assert.IsInstanceOfType<CrashReportEventDataAllOf> (instance, "variable 'instance' is a CrashReportEventDataAllOf");
        }


        /// <summary>
        /// Test the property 'Breadcrumbs'
        /// </summary>
        [Fact]
        public void BreadcrumbsTest()
        {
            // TODO unit test for the property 'Breadcrumbs'
        }
        /// <summary>
        /// Test the property 'ClassName'
        /// </summary>
        [Fact]
        public void ClassNameTest()
        {
            // TODO unit test for the property 'ClassName'
        }
        /// <summary>
        /// Test the property 'Severity'
        /// </summary>
        [Fact]
        public void SeverityTest()
        {
            // TODO unit test for the property 'Severity'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'StackTrace'
        /// </summary>
        [Fact]
        public void StackTraceTest()
        {
            // TODO unit test for the property 'StackTrace'
        }
        /// <summary>
        /// Test the property 'ExceptionHandled'
        /// </summary>
        [Fact]
        public void ExceptionHandledTest()
        {
            // TODO unit test for the property 'ExceptionHandled'
        }
        /// <summary>
        /// Test the property 'TopmostContext'
        /// </summary>
        [Fact]
        public void TopmostContextTest()
        {
            // TODO unit test for the property 'TopmostContext'
        }
        /// <summary>
        /// Test the property 'PlCrashReportFileBase64'
        /// </summary>
        [Fact]
        public void PlCrashReportFileBase64Test()
        {
            // TODO unit test for the property 'PlCrashReportFileBase64'
        }
        /// <summary>
        /// Test the property 'IosImageBaseAddress'
        /// </summary>
        [Fact]
        public void IosImageBaseAddressTest()
        {
            // TODO unit test for the property 'IosImageBaseAddress'
        }
        /// <summary>
        /// Test the property 'IosImageSize'
        /// </summary>
        [Fact]
        public void IosImageSizeTest()
        {
            // TODO unit test for the property 'IosImageSize'
        }
        /// <summary>
        /// Test the property 'SessionNumber'
        /// </summary>
        [Fact]
        public void SessionNumberTest()
        {
            // TODO unit test for the property 'SessionNumber'
        }

    }

}
